#!/bin/zsh
#
# name:          init-haskell-stack-project.zsh
# version:       see VERSION.md
# synopsis:      initialize a `Haskell`'s `stack` project.
# license:       BSD3
# license-file:  LICENSE.md
# author:        art rimbaud
# maintainer:    rimbaudcode[at]gmail(DoT)com
# copyright:     (c) 2016 rimbaudcode
# category:      Programming

local REQUIRED_ARGC=2
local USAGE="Usage: init-haskell-stack-project PROJECT_NAME STACK_TEMPLATE_NAME"

if (( $# != REQUIRED_ARGC )); then
    echo $USAGE
    exit 1
fi

local PROJECT_NAME=$1
local SCRIPT_DIR_PATH=$HOME/github/scripts
local STACK_TEMPLATE_NAME=$2
local TEMPLATE_DIR_PATH=$HOME/github/scripts/haskell-stack-templates

stack update
stack new $PROJECT_NAME $STACK_TEMPLATE_NAME
cd $PROJECT_NAME
#
git flow init -d
git flow feature start initial-config
#
wget https://raw.githubusercontent.com/github/gitignore/master/Haskell.gitignore -O .gitignore
git add .gitignore
git commit -am "Github's .gitignore in place"
#
mv LICENSE LICENSE.md
git add LICENSE.md
git commit -am "BSD3 LICENSE.md in place"
#
sed -i '' -- "s/LICENSE/LICENSE.md/g" $PROJECT_NAME.cabal
git add $PROJECT_NAME.cabal
git commit -am "LICENSE renamed to LICENSE.md in $PROJECT_NAME.cabal"
#
git add README.md
git commit -am "README.md in place"
#
cp $TEMPLATE_DIR_PATH/CHANGELOG.org ./CHANGELOG.org
#
echo "\n# CHANGELOG\nCHANGELOG.org" >> .gitignore
git add .gitignore
git commit -m "CHANGELOG.org in place but not tracked by git"
#
hasktags -e . > TAGS
echo "\n# Emacs\nTAGS" >> .gitignore
git add .gitignore
git commit -m "Emacs TAGS in place but not tracked by git"
#
mkdir -p bench
touch bench/Bench.hs
git add bench bench/Bench.hs
git commit -m "benchmark folder and Bench.hs in place"
#
mkdir -p data
git add data
git commit -m "data folder in place"
#
mkdir -p dep
git add dep
git commit -m "dependency folder in place"
#
mkdir -p doc
git add doc
git commit -m "documentation folder in place"
#
mkdir -p prof
git add prof
git commit -m "profiling folder in place"
#
mkdir -p rep
git add rep
git commit -m "report folder in place"
#
git add .
git commit -am "project config files (stack generated files) under git"
#
git flow feature finish initial-config
